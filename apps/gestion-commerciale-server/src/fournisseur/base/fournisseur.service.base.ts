/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Fournisseur as PrismaFournisseur } from "@prisma/client";

export class FournisseurServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FournisseurCountArgs, "select">
  ): Promise<number> {
    return this.prisma.fournisseur.count(args);
  }

  async fournisseurs(
    args: Prisma.FournisseurFindManyArgs
  ): Promise<PrismaFournisseur[]> {
    return this.prisma.fournisseur.findMany(args);
  }
  async fournisseur(
    args: Prisma.FournisseurFindUniqueArgs
  ): Promise<PrismaFournisseur | null> {
    return this.prisma.fournisseur.findUnique(args);
  }
  async createFournisseur(
    args: Prisma.FournisseurCreateArgs
  ): Promise<PrismaFournisseur> {
    return this.prisma.fournisseur.create(args);
  }
  async updateFournisseur(
    args: Prisma.FournisseurUpdateArgs
  ): Promise<PrismaFournisseur> {
    return this.prisma.fournisseur.update(args);
  }
  async deleteFournisseur(
    args: Prisma.FournisseurDeleteArgs
  ): Promise<PrismaFournisseur> {
    return this.prisma.fournisseur.delete(args);
  }
}
